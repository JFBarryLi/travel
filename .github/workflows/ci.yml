on:
  push:
    branches:
      - main

name: Deploy to Amazon ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: travel-data-pipeline
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: travel-data-pipeline
        image: ${{ steps.build-image.outputs.image }}

    - name: Fill in task definition variables
      id: task-def-substitution
      env:
        TASK_DEF: ${{ steps.task-def.outputs.task-definition }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWSLOGS_GROUP_NAME: ${{ secrets.AWSLOGS_GROUP_NAME }}
        TASK_ROLE_ARN: ${{ secrets.TASK_ROLE_ARN }}
        ALERT_WEBHOOK: ${{ secrets.ALERT_WEBHOOK }}
        TRAVEL_TABLE: ${{ secrets.TRAVEL_TABLE }}
        NOTES_BUCKET_NAME: ${{ secrets.NOTES_BUCKET_NAME }}
      run: |
        sed -i "s|__AWS_REGION__|${AWS_REGION}|g" ${TASK_DEF}
        sed -i "s|__AWSLOGS_GROUP_NAME__|${AWSLOGS_GROUP_NAME}|g" ${TASK_DEF}
        sed -i "s|__TASK_ROLE_ARN__|${TASK_ROLE_ARN}|g" ${TASK_DEF}
        sed -i "s|__ALERT_WEBHOOK__|${ALERT_WEBHOOK}|g" ${TASK_DEF}
        sed -i "s|__TRAVEL_TABLE__|${TRAVEL_TABLE}|g" ${TASK_DEF}
        sed -i "s|__NOTES_BUCKET_NAME__|${NOTES_BUCKET_NAME}|g" ${TASK_DEF}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        cluster: prod-backend-services
